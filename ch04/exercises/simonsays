import random
import pygame

pygame.init()
screen = pygame.display.set_mode()
width, height = screen.get_window_screen

hitbox_width = width/2
hitbox_length = height/2

hitboxes = {
    "red": pygame.Rect(0, 0, hitbox_width, hitbox_length),
    "green": pygame.Rect(0, 0, hitbox_width, hitbox_length),
    "blue": pygame.Rect(0, 0, hitbox_width, hitbox_length),
    "purple": pygame.Rect(0, 0, hitbox_width, hitbox_length)
}

hitboxes["blue"].topleft = hitboxes["red"].topright
hitboxes["green"].topright = hitboxes["red"].bottomright
hitboxes["purple"].topleft = hitboxes["red"].bottomright

font = pygame.font.SysFont("Arial", 24)
done = False
result = []
turns = 0
order = list(hitboxes.keys())

random.shuffle(order)

while not done: # must respond to every event
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            done = True
        elif event.type == pygame.MOUSEBUTTONDOWN:
            if event.key == pygame.K_SPACE:
                random.shuffle(order)
                turns = len(order)
                result = []
            elif event.type == pygame.MOUSEBUTTONDOWN:
                turns = turns-1
                if hitboxes["red"].collidepoint(event. pos):
                    result.append("red")
                elif hitboxes["green"].collidepoint(event. pos):
                    result.append("green")
                elif hitboxes["blue"].collidepoint(event. pos):
                    result.append("blue")
                elif hitboxes["purple"].collidepoint(event. pos):
                    result.append("purple")

done = True
#pygame.Rect - keeps track of 
#   x and  coordinates
#   width and height
#   Rectangles can't track visuals

#using "pass" allows u to bypass the requirement
#can be used in if statements
#Ex: if event.key == pygame.K_SPACE:
#       pass